
[init]
	defaultBranch = main
  templateDir = ~/.git_template

[user]
  name = Misha Manulis

[include]
  path = ~/.gitconfig.local

[branch]
  autosetupmerge = true

[branch "master"]
  merge = refs/heads/master
  remote = origin

[branch "main"]
  merge = refs/heads/main
  remote = origin

[color]
  branch = auto
  diff = auto
  interactive = auto
  pager = true
  status = auto
  ui = true

[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green

[color "diff"]
  frag = magenta bold
  meta = yellow bold
  new  = green bold
  old  = red bold

[color "status"]
  added = yellow
  changed = green
  untracked = cyan

[commit]
	verbose = true

[core]
  attributesfile = ~/.gitattributes
  autocrlf = input
  excludesfile = ~/.gitignore
  filemode = true
  logallrefupdates = true
  pager = delta
  whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol

[credential]
	helper = osxkeychain

[delta]
  navigate = true  # use n and N to move between diff sections
  line-numbers = true

[diff]
  algorithm = histogram
  colorMoved = default
  mnemonicprefix = true
  renames = copies

[diff "rspec"]
  xfuncname = "^[ \t]*((RSpec|describe|context|it|before|after|around|feature|scenario)[ \t].*)$"

[github]
  user = misham

[fetch]
  fsckobjects = true

[filter "lfs"]
  clean = git lfs clean %f
  required = true
  smudge = git lfs smudge %f

[http]
  cookiefile = ~/.gitcookies

[interactive]
  diffFilter = delta --color-only

[log]
	showSignature = true

[merge]
  conflictstyle = zdiff3

[rebase]
  autostash = true

[receive]
  fsckObjects = true

[transfer]
  fsckobjects = true

[url "git@github.com:"]
  insteadOf = https://github.com/

[url "git@gitlab.com:"]
  insteadOf = https://gitlab.com/

[alias]
  ci = commit
  st = status
  co = checkout
  br = branch
  # prune all tracking local branches that have been removed from remote:
  prune-all = !git remote | xargs -n 1 git remote prune
  # show list of contributors in descending order by number of commits
  rank = shortlog -sn --no-merges
  # given a string for an author, try to figure out full name and email:
  whois = "!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>\n\" --author=\"$1\"' -"
  # given any git object, try to show it briefly
  whatis = show -s --pretty='tformat:%h (%s, %ad)' --date=short
  # Search for a given string in all patches and print commit messages
  # example: search for any commit that adds or removes string "foobar"
  #     git searchcommits foobar
  # example: search commits for string "foobar" in directory src/lib
  #     git searchcommits foobar src/lib
  # example: search commits for "foobar", print full diff of commit with 1 line context
  #     git searchcommits foobar --pickaxe-all -U1 src/lib
  searchcommits = "!f() { query=\"$1\"; shift; git log -S\"$query\" \"$@\"; }; f \"$@\""
  info = !~/.dotfiles/git/git-info
	ctags = !.git/hooks/ctags
  rm-remote = push origin --delete
  wc = whatchanged -p --abbrev-commit --pretty=medium
  files = diff-tree --no-commit-id --name-only -r

