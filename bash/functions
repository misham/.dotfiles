#!/bin/bash
#
# https://github.com/misham/dotfiles
#
# Based on stuff I found on dotfiles.org and github.com
#
# -----------------------------------------------------------------------------
# Calculator function
#
# @param $* What to calculate
#
calc()
{
  echo "$*" | bc -l ;
} # calc

# -----------------------------------------------------------------------------
# Uncompress a passed in file
#
# @param $1 File to uncompress
#
extract ()
{
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)
      tar -xjvpf $1
      ;;
      *.tar.gz)
      tar -xzvpf $1
      ;;
      *.bz2)
      bunzip2 $1
      ;;
      *.rar)
      rar x $1
      ;;
      *.gz)
      gunzip $1
      ;;
      *.tar)
      tar -xvpf $1
      ;;
      *.tbz2)
      tar -xjvpf $1
      ;;
      *.tgz)
      tar xzf $1
      ;;
      *.zip)
      unzip $1
      ;;
      *.Z)
      uncompress $1
      ;;
      *.rpm)
      rpm2cpio $1 | cpio -idmv
      ;;
      *.deb)
      ar p $1 data.tar.gz | tar zx
      ;;
      *)
      echo "'$1' cannot be extracted via extract()"
      ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
} # extract

# -----------------------------------------------------------------------------
# Grep for the specified process
#
# @param $1 Process to grep for
#
psgrep()
{
  if [ ! -z $1 ] ; then
    echo "Grepping for processes matching $1..."
    ps aux | grep $1 | grep -v grep
  else
    echo "!! Need name to grep for"
  fi
} # psgrep

# -----------------------------------------------------------------------------
# Push SSH public key to another box
#   from https://github.com/rtomayko/dotfiles
#
push_ssh_cert()
{
  local _host
  test -f ~/.ssh/id_rsa.pub || ssh-keygen -t rsa
  for _host in "$@";
  do
    echo $_host
    ssh $_host 'cat >> ~/.ssh/authorized_keys' < ~/.ssh/id_dsa.pub
  done
}

# -----------------------------------------------------------------------------
# Setup project environment
#
# @param Name of project, case sensitive
#
project()
{
  if [[ -e "$HOME/$PROJECT_DIR/$1" && -d "$HOME/$PROJECT_DIR/$1" ]]; then
    cd "$HOME/$PROJECT_DIR/$1"
    source $HOME/.project.env
    if [[ -e .project.local ]]; then
      source .project.local
    fi

    if [[ -e "$HOME/$PROJECT_DIR/$1/bin" && -d "$HOME/$PROJECT_DIR/$1/bin" ]]; then
      export PATH=$HOME/$PROJECT_DIR/$1/bin:$PATH
    fi
  fi
}

# -----------------------------------------------------------------------------
# Get IP
#   From: https://github.com/mileszs/dotfiles
#
function myip()
{
  IP=`ifconfig  | grep 'inet addr:'| grep -v '127.0.0.1' | cut -d: -f2 | awk '{ print $1}'`;
  echo $IP
}

BLUE='\[\033[1;34m\]'
RED='\[\033[1;31m\]'
NORMAL='\[\033[00m\]'
NORMAL_BOLD='\[\033[00;01m\]'

# -----------------------------------------------------------------------------
# SVN prompt helper
#
function svn_prompt()
{
  svn info 2>/dev/null | awk '/URL/ {print $2}'
}

# -----------------------------------------------------------------------------
# Git prompt helper
#
function git_prompt()
{
  __git_ps1 "%s"
}

# -----------------------------------------------------------------------------
# RVM prompt helper
#
function rvm_prompt
{
  $HOME/.rvm/bin/rvm-prompt
}

# -----------------------------------------------------------------------------
# Command history logger
#
function command_log
{
  case $1 in
    "init")
      echo "init $2" >> $HOME/.command_logger
      ;;

    "stop")
      sed -i "/$init/d" $HOME/.command_logger
      ;;

    *)
      ;;
  esac
}

